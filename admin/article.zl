inc 'common.zl';
inc 'helper.zl';

querys = rqtGetQuery();
action = querys['act'] ? querys['act'] : 'list';
if(action == 'list')
	Article.list();
elif(action == 'add')
	Article.add();
elif(action == 'edit')
	Article.edit();
elif(action == 'delete')
	Article.delete();
elif(action == 'save_draft')
	Article.saveDraft();
elif(action == 'show_draft')
	Article.showDraft();
else
	print 'invalid act';
endif

class Article
	// 显示文章列表
	fun list()
		global menus, querys;
		data['title'] = '文章列表:';
		setCurMenu(menus, 'article.zl');
		data['csses', 0] = 'article_list.css';
		data['head_js', 0] = 'category.js';
		data['menus'] = menus;
		db = Article.initDB();
		Article.getCategory(db, data, querys);
		where = " where 1 ";
		if(bltCount(data['category']))
			where += " and cid=" + data['category', 'id'];
		endif
		stitle = bltStr(&querys['stitle']);
		if(stitle)
			where += ' and title like "%' + Mysql.Escape(db, stitle) + '%"';
			data['stitle'] = stitle;
		endif
		tmp = Mysql.fetchOne(db, "select count(1) as cnt from article " + where);
		total = bltInt(tmp['cnt']);
		page = get_page(10, total, 10);
		for(i=page['start']; i <= page['end'];i++)
			cur = (page['curpage'] == i) ? ' class="active"' : '';
			pages[] = '<li'+cur+'><a href="'+page['link']+'page='+i+'">'+i+'</a></li>';
		endfor
		data['page'] = page;
		data['pages'] = pages;
		data['articles'] = Mysql.fetchAll(db, "select a.id,title,thumbnail,author,created_at,updated_at,c.name as cname from article as a left join category as c on c.id=a.cid "+ where +
							" order by id desc limit " + page['offset'] + "," + page['limit']);
		print bltMustacheFileRender("tpl/article_list.tpl", data);
	endfun

	// 初始化数据库连接
	fun initDB()
		global config;
		db = bltArray();
		Mysql.init(db, config, "tpl/error.tpl");
		return db;
	endfun

	// 获取分类列表，或者某个分类的信息
	fun getCategory(db, data, posts = 0)
		if(posts && posts['cid'] > 0)
			data['category'] = Mysql.fetchOne(db, "select id,name from category where id='"+posts['cid']+"'");
		else
			data['categories'] = Mysql.fetchAll(db, "select id,name,childcnt from category where pid=0 order by id asc");
		endif
	endfun

	// 显示添加或编辑文章的页面
	fun showAdd(db, data, posts = 0, isadd = TRUE)
		global menus;
		setCurMenu(menus, 'article.zl');
		csses = bltArray('article_add.css', 'jquery.fileupload.css');
		js = bltArray('ckeditor/ckeditor.js', 'jquery.ui.widget.js', 'jquery.iframe-transport.js', 'jquery.fileupload.js', 'category.js');
		data['csses'] = csses;
		data['head_js'] = js;
		data['menus'] = menus;
		data['title'] = isadd ? '添加文章' : '编辑文章';
		data['act'] = isadd ? 'add' : 'edit';
		Article.getCategory(db, data, posts);
		print bltMustacheFileRender("tpl/article_add.tpl",data);
	endfun

	// 校验数据
	fun validate(db, posts, isadd = TRUE)
		bltUnset(&posts['thumbnail_up']);
		bltStr(&posts['title'], TRUE);
		bltStr(&posts['thumbnail'], TRUE);	
		bltStr(&posts['description'], TRUE);
		bltStr(&posts['content'], TRUE);
		bltInt(&posts['cid'], TRUE);
		bltStr(&posts['author'], TRUE);
		if(!posts['title'])
			data['err_msg'] = '标题不能为空';
		elif(!posts['content'])
			data['err_msg'] = '内容不能为空';
		elif(!posts['cid'])
			data['err_msg'] = '请选择有效的分类';
		elif(!posts['author'])
			data['err_msg'] = '作者不能为空';
		elif(!isadd && !posts['id'])
			data['err_msg'] = '无效的文章ID';
		endif
		if(data['err_msg'])
			data['posts'] = posts;
			if(posts['id'])
				data['id'] = posts['id'];
			endif
			Article.showAdd(db, data, posts, isadd);
			bltExit();
		endif
	endfun

	// 添加文章
	fun add()
		posts = rqtGetBodyAsArray();
		db = Article.initDB();
		if(posts['submit'])
			Article.validate(db, posts);
			bltUnset(&posts['submit']);
			posts['created_at'] = bltDate('%Y-%m-%d %H:%M:%S');
			posts['updated_at'] = posts['created_at'];
			Mysql.Insert(db, 'article', posts);
			data['success_msg'] = '添加文章成功';
		endif
		Article.showAdd(db, data);
	endfun

	// 编辑文章
	fun edit()
		global querys;
		posts = rqtGetBodyAsArray();
		db = Article.initDB();
		if(posts['submit'])
			id = bltInt(posts['id']);
			Article.validate(db, posts, FALSE);
			bltUnset(&posts['submit']);
			posts['updated_at'] = bltDate('%Y-%m-%d %H:%M:%S');
			Mysql.Update(db, 'article', posts, 'id=' + id);
			data['success_msg'] = '编辑文章成功';
		else
			id = bltInt(querys['id']);
		endif
		data['posts'] = Mysql.fetchOne(db, "select * from article where id='"+id+"'");
		if(!bltCount(data['posts']))
			data['err_msg'] = '无效的文章ID';
			id = 0;
		endif
		data['id'] = id;
		Article.showAdd(db, data, data['posts'], FALSE);
	endfun

	// 删除文章
	fun delete()
		global querys;
		db = Article.initDB();
		id = querys['id'] ? bltInt(querys['id']) : 0;
		if(id <= 0) 
			ajax_return('无效的文章id'); 
		endif
		Mysql.Exec(db, "DELETE FROM article WHERE id="+id);
		ajax_return();
	endfun

	// 保存草稿
	fun saveDraft()
		posts = rqtGetBodyAsArray();
		if(posts['submit'])
			bltUnset(&posts['submit']);
			posts['time'] = bltDate('%Y-%m-%d %H:%M:%S');
			db = Article.initDB();
			draft = Mysql.fetchOne(db, "select * from article_draft order by id desc limit 0,1");
			if(!bltCount(draft))
				Mysql.Insert(db, 'article_draft', posts);
			else
				Mysql.Update(db, 'article_draft', posts, 'id=' + draft['id']);
			endif
		else
			ajax_return('invalid posts');
		endif
		ajax_return();
	endfun

	// 查看草稿
	fun showDraft()
		db = Article.initDB();
		data = Mysql.fetchOne(db, "select * from article_draft order by id desc limit 0,1");
		if(!bltCount(data))
			data['message'] = '暂无草稿';
		endif
		print bltMustacheFileRender("tpl/show_draft.tpl",data);
	endfun
endclass
